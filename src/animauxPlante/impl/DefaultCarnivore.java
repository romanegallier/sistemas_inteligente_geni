package animauxPlante.impl;

import animauxPlante.*;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultCarnivore <br>
 * @version generated on Sat Sep 30 17:35:42 BRT 2017 by romane
 */
public class DefaultCarnivore extends WrappedIndividualImpl implements Carnivore {

    public DefaultCarnivore(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Object Property http://www.semanticweb.org/romane/ontologies/2017/8/AnimauxPlantes.owl#mange
     */
     
    public Collection<? extends WrappedIndividual> getMange() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_MANGE,
                                               WrappedIndividualImpl.class);
    }

    public boolean hasMange() {
	   return !getMange().isEmpty();
    }

    public void addMange(WrappedIndividual newMange) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_MANGE,
                                       newMange);
    }

    public void removeMange(WrappedIndividual oldMange) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_MANGE,
                                          oldMange);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/romane/ontologies/2017/8/AnimauxPlantes.owl#mangePar
     */
     
    public Collection<? extends WrappedIndividual> getMangePar() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_MANGEPAR,
                                               WrappedIndividualImpl.class);
    }

    public boolean hasMangePar() {
	   return !getMangePar().isEmpty();
    }

    public void addMangePar(WrappedIndividual newMangePar) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_MANGEPAR,
                                       newMangePar);
    }

    public void removeMangePar(WrappedIndividual oldMangePar) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_MANGEPAR,
                                          oldMangePar);
    }


}
